package im.grusis.mkb;

import java.util.Map;

import org.junit.Assert;
import org.testng.annotations.Test;

/**
 * User: beij
 * Date: 16/05/13
 * Time: 17:45
 */
public class unserializerTest {
  @Test
  public void unserializeTest() {
    String serializedString = "a:3:{s:1:\"p\";s:39:\"212936571128682845071308878878059010067\";s:1:\"g\";s:39:\"101442737521645273653232103903447910079\";s:1:\"y\";s:39:\"206711466122027342638817872750635062381\";}";
    Map<String, Object> result = (Map<String, Object>) Unserializer.unserialize(serializedString);
    Assert.assertEquals("212936571128682845071308878878059010067", result.get("p"));
    Assert.assertEquals("101442737521645273653232103903447910079", result.get("g"));
    Assert.assertEquals("206711466122027342638817872750635062381", result.get("y"));

    serializedString = "a:3:{s:1:\"p\";s:39:\"233829356466320610519071132649157616807\";s:1:\"g\";s:38:\"94860858528074519022402472317646994195\";s:1:\"y\";s:39:\"191845928727091851363520415230062144547\";}";
    result = (Map<String, Object>) Unserializer.unserialize(serializedString);
    Assert.assertEquals("233829356466320610519071132649157616807", result.get("p"));
    Assert.assertEquals("94860858528074519022402472317646994195", result.get("g"));
    Assert.assertEquals("191845928727091851363520415230062144547", result.get("y"));

    serializedString = "s:372:\"{\"returnCode\":\"0\",\"returnMsg\":\"No error.\",\"returnObjs\":{\"GS_NAME\":\"server4\",\"GS_IP\":\"http://s4.mysticalcard.com/\",\"friendCode\":\"null\",\"GS_PORT\":\"80\",\"timestamp\":\"1368725603115\",\"GS_CHAT_PORT\":\"8000\",\"source\":\"mewrobot1\",\"userName\":\"mewrobot1\",\"GS_DESC\":\"é\u0087\u0091å±\u009Eå·¨é¾\u0099\",\"U_ID\":\"1000525072\",\"key\":\"e1c964d4e49e4707169c0042a29e4058\",\"G_TYPE\":\"1\",\"GS_CHAT_IP\":\"218.245.1.170\"}}\";";
    Assert.assertArrayEquals(new int[] {1701978747, 1852994932, 1701080899, 807549474, 1914842146, 1920300133, 1735609710, 1310865954, 1919230063, 779251570, 1914842146, 1920300133, 1784827758, 2067407475, 1599293218, 1162690894, 1931622946, 1702261349, 740439154, 1599293218, 975327305, 1953785890, 791624304, 1831744627, 1769239417, 1668047203, 778334817, 795701091, 1713515554, 1852139890, 1685013348, 574235237, 1819047278, 1193421858, 1330667347, 975328338, 573585442, 1769218604, 1953719661, 577793377, 858858042, 842479670, 858797621, 573911345, 1397170732, 1095254879, 1330667348, 975328338, 808466466, 573317680, 1920298867, 975332707, 2003135778, 1868722034, 740438388, 1702065442, 1835093618, 574235237, 1920427373, 1953456751, 573317681, 1147097927, 574837573, -539942342, 750771688, 1230984482, 574235204, 808464433, 808792629, 740438583, 2036689698, 1696741922, 909730609, 1697932340, 879049012, 825700407, 811809078, 1630680112, 879049010, 574108976, 1598497324, 1162893652, 824326690, 1193421858, 1212374867, 1230984257, 574235216, 775434546, 775238706, 925969969, 2105352752, 364}, XXTEA.stringToIntArray(((String)Unserializer.unserialize(serializedString)),true));

  }

}
